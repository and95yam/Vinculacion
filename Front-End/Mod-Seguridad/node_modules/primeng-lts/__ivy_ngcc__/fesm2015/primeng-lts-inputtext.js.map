{"version":3,"file":"primeng-lts-inputtext.js","sources":["../../src/app/components/inputtext/inputtext.ts","../../src/app/components/inputtext/primeng-lts-inputtext.ts"],"names":[],"mappings":";;;;;;MAYa,SAAS;AAAG,IAIrB,YAAmB,EAAc,EAAqB,OAAgB,EAAU,EAAqB;AAAI,QAAtF,OAAE,GAAF,EAAE,CAAY;AAAC,QAAoB,YAAO,GAAP,OAAO,CAAS;AAAC,QAAS,OAAE,GAAF,EAAE,CAAmB;AAAC,KAAI;AAC9G,IACI,SAAS;AACb,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,KAAK;AACL,IACI,eAAe;AACnB,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,QAAQ,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;AAChC,KAAK;AACL,IAEI,OAAO,CAAC,CAAC;AACb,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,KAAK;AACL,IACI,iBAAiB;AACrB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACxF,aAAyB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7D,KAAK;AACL;qCAhCC,SAAS,SAAC,kBACP,QAAQ,EAAE,cAAc,kBACxB,IAAI,EAAE,sBACF,qBAAqB,EAAE,MAAM,sBAC7B,qBAAqB,EAAE;AAAM,sBAC7B,kBAAkB,EAAE,QAAQ,kBAC/B,cACJ;;;;WACI;AAAC;AAAmC,YAZd,UAAU;AAAI,YACjC,OAAO,uBAeyB,QAAQ;AAAO,YAhBc,iBAAiB;AAAG;AAAG;AAA6B,sBA2BpH,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;AAClC;;;;;;;;;;;;;;;;oBAAE;AAAC,MAeO,eAAe;AAAG;2CAL9B,QAAQ,SAAC;GACN,OAAO,EAAE,CAAC,YAAY,CAAC,kBACvB,OAAO,EAAE,CAAC,SAAS,CAAC,kBACpB,YAAY,EAAE,CAAC,SAAS,CAAC,cAC5B;;;;;;;;;0BACI;AAAC;AC3CN;AACA;AACA;AACA;AACA;AACS","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional, ChangeDetectorRef, AfterViewInit} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck,AfterViewInit {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, private cd: ChangeDetectorRef) { }\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n\n    ngAfterViewInit() {\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n    \n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}