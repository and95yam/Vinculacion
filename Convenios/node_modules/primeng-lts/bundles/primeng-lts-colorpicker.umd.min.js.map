{"version":3,"sources":["../../src/app/components/colorpicker/colorpicker.ts"],"names":["COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","el","renderer","cd","this","format","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onChange","EventEmitter","onShow","onHide","value","h","s","b","defaultColor","onModelChange","onModelTouched","Object","defineProperty","prototype","element","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","onHueMousedown","event","disabled","bindDocumentMousemoveListener","bindDocumentMouseupListener","hueDragging","pickHue","onHueTouchStart","changedTouches","onColorTouchStart","colorDragging","pickColor","position","pageY","top","nativeElement","getBoundingClientRect","window","pageYOffset","document","documentElement","scrollTop","body","validateHSB","Math","floor","max","min","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","onColorMousedown","onMove","preventDefault","onDragEnd","unbindDocumentMousemoveListener","unbindDocumentMouseupListener","pageX","rect","left","scrollLeft","saturation","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","markForCheck","hsb","style","backgroundColor","inputBgColor","onInputFocus","show","overlayVisible","onOverlayAnimationStart","toState","inline","overlay","appendOverlay","zIndex","String","DomHandler","zindex","alignOverlay","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","onOverlayAnimationEnd","appendTo","appendChild","restoreOverlayAppend","absolutePosition","inputViewChild","relativePosition","hide","onInputClick","selfClick","togglePanel","onInputKeydown","which","onPanelClick","registerOnChange","fn","registerOnTouched","setDisabledState","_this","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentMousemoveListener","documentMouseupListener","documentResizeListener","onWindowResize","bind","addEventListener","unbindDocumentResizeListener","removeEventListener","scrollHandler","ConnectedOverlayScrollHandler","containerViewChild","unbindScrollListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","destroy","Component","args","selector","template","animations","trigger","transition","opacity","transform","animate","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ChangeDetectorRef","Input","Output","ViewChild","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, OnDestroy, EventEmitter, forwardRef, Renderer2, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng-lts/dom';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const COLORPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n\n@Component({\n    selector: 'p-colorPicker',\n    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-colorpicker p-component':true,'p-colorpicker-overlay':!inline,'p-colorpicker-dragging':colorDragging||hueDragging}\">\n            <input #input type=\"text\" *ngIf=\"!inline\" class=\"p-colorpicker-preview p-inputtext\" readonly=\"readonly\" [ngClass]=\"{'p-disabled': disabled}\"\n                (focus)=\"onInputFocus()\" (click)=\"onInputClick()\" (keydown)=\"onInputKeydown($event)\" [attr.id]=\"inputId\" [attr.tabindex]=\"tabindex\" [disabled]=\"disabled\"\n                [style.backgroundColor]=\"inputBgColor\">\n            <div *ngIf=\"inline || overlayVisible\" [ngClass]=\"{'p-colorpicker-panel': true, 'p-colorpicker-overlay-panel':!inline, 'p-disabled': disabled}\" (click)=\"onPanelClick()\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"inline === true\"\n                    (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationEnd($event)\">\n                <div class=\"p-colorpicker-content\">\n                    <div #colorSelector class=\"p-colorpicker-color-selector\" (touchstart)=\"onColorTouchStart($event)\" (touchmove)=\"onMove($event)\" (touchend)=\"onDragEnd()\" (mousedown)=\"onColorMousedown($event)\">\n                        <div class=\"p-colorpicker-color\">\n                            <div #colorHandle class=\"p-colorpicker-color-handle\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"p-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\" (touchstart)=\"onHueTouchStart($event)\" (touchmove)=\"onMove($event)\" (touchend)=\"onDragEnd()\">\n                        <div #hueHandle class=\"p-colorpicker-hue-handle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n              ]),\n              transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n              ])\n        ])\n    ],\n    providers: [COLORPICKER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./colorpicker.css']\n})\nexport class ColorPicker implements ControlValueAccessor, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inline: boolean;\n\n    @Input() format: string = 'hex';\n\n    @Input() appendTo: any;\n\n    @Input() disabled: boolean;\n\n    @Input() tabindex: string;\n\n    @Input() inputId: string;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('input') inputViewChild: ElementRef;\n\n    value: any = {h:0, s: 100, b: 100};\n\n    inputBgColor: string;\n\n    shown: boolean;\n\n    overlayVisible: boolean;\n\n    defaultColor: string = 'ff0000';\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    documentClickListener: Function;\n\n    documentResizeListener: any;\n\n    documentMousemoveListener: Function;\n\n    documentMouseupListener: Function;\n\n    documentHueMoveListener: Function;\n\n    scrollHandler: any;\n\n    selfClick: boolean;\n\n    colorDragging: boolean;\n\n    hueDragging: boolean;\n\n    overlay: HTMLDivElement;\n\n    colorSelectorViewChild: ElementRef;\n\n    colorHandleViewChild: ElementRef;\n\n    hueViewChild: ElementRef;\n\n    hueHandleViewChild: ElementRef;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\n\n    @ViewChild('colorSelector') set colorSelector(element: ElementRef) {\n        this.colorSelectorViewChild = element;\n    }\n\n    @ViewChild('colorHandle') set colorHandle(element: ElementRef) {\n        this.colorHandleViewChild = element;\n    }\n\n    @ViewChild('hue') set hue(element: ElementRef) {\n        this.hueViewChild = element;\n    }\n\n    @ViewChild('hueHandle') set hueHandle(element: ElementRef) {\n        this.hueHandleViewChild = element;\n    }\n\n    onHueMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n\n    onHueTouchStart(event) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.hueDragging = true;\n        this.pickHue(event, event.changedTouches[0]);\n    }\n\n    onColorTouchStart(event) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.colorDragging = true;\n        this.pickColor(event, event.changedTouches[0]);\n    }\n\n    pickHue(event, position?) {\n        let pageY = position ? position.pageY : event.pageY;\n        let top: number = this.hueViewChild.nativeElement.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor(360 * (150 - Math.max(0, Math.min(150, (pageY - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    onColorMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n\n    onMove(event) {\n        if (this.colorDragging) {\n            this.pickColor(event, event.changedTouches[0]);\n            event.preventDefault();\n        }\n\n        if (this.hueDragging) {\n            this.pickHue(event, event.changedTouches[0]);\n            event.preventDefault();\n        }\n    }\n\n    onDragEnd() {\n        this.colorDragging = false;\n        this.hueDragging = false;\n\n        this.unbindDocumentMousemoveListener();\n        this.unbindDocumentMouseupListener();\n    }\n\n    pickColor(event, position?) {\n        let pageX = position ? position.pageX : event.pageX;\n        let pageY = position ? position.pageY : event.pageY;\n        let rect = this.colorSelectorViewChild.nativeElement.getBoundingClientRect();\n        let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        let left = rect.left + document.body.scrollLeft;\n        let saturation = Math.floor(100 * (Math.max(0, Math.min(150, ((pageX)- left)))) / 150);\n        let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, ((pageY) - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    getValueToUpdate() {\n        let val: any;\n        switch(this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n            break;\n\n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n            break;\n\n            case 'hsb':\n                val = this.value;\n            break;\n        }\n\n        return val;\n    }\n\n    updateModel(): void {\n        this.onModelChange(this.getValueToUpdate());\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            switch(this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                break;\n\n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                break;\n\n                case 'hsb':\n                    this.value = value;\n                break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.cd.markForCheck();\n    }\n\n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb: any = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n\n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left =  Math.floor(150 * this.value.s / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top =  Math.floor(150 * (100 - this.value.b) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h / 360)) + 'px';\n\n        }\n\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n\n    onInputFocus() {\n        this.onModelTouched();\n    }\n\n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                    this.bindScrollListener();\n\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    onOverlayAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.onShow.emit({})\n                }\n            break;\n\n            case 'void':\n                this.onHide.emit({})\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild.nativeElement);\n    }\n\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n\n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n\n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    onInputKeydown(event: KeyboardEvent) {\n        switch(event.which) {\n            //space\n            case 32:\n                this.togglePanel();\n                event.preventDefault();\n            break;\n\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n        }\n    }\n\n    onPanelClick() {\n        this.selfClick = true;\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n\n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMousemoveListener = this.renderer.listen(documentTarget, 'mousemove', (event: MouseEvent) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n\n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n\n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n\n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMouseupListener = this.renderer.listen(documentTarget, 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n\n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n\n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n\n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i=0; i<len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n\n    HEXtoRGB(hex) {\n        let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n    }\n\n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n\n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? 255 * delta / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n\n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: null, g: null, b: null\n        };\n        let h: number = hsb.h;\n        let s: number = hsb.s*255/100;\n        let v: number = hsb.b*255/100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            }\n        }\n        else {\n            let t1: number = v;\n            let t2: number = (255-s)*v/255;\n            let t3: number = (t1-t2)*(h%60)/60;\n            if (h==360) h = 0;\n            if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n            else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n            else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n            else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n            else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n            else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n            else {rgb.r=0; rgb.g=0;\trgb.b=0}\n        }\n        return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n    }\n\n    RGBtoHEX(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n\n        for(var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }\n\n        return hex.join('');\n    }\n\n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n\n    onOverlayHide() {\n        this.unbindScrollListener();\n        this.unbindDocumentResizeListener();\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ColorPicker],\n    declarations: [ColorPicker]\n})\nexport class ColorPickerModule { }\n"]}