{"version":3,"sources":["../../src/app/components/inputtext/inputtext.ts"],"names":["InputText","el","ngModel","cd","this","prototype","ngDoCheck","updateFilledState","ngAfterViewInit","detectChanges","onInput","e","filled","nativeElement","value","length","model","Directive","args","selector","host","[class.p-inputtext]","[class.p-component]","[class.p-filled]","ElementRef","NgModel","decorators","type","Optional","ChangeDetectorRef","HostListener","NgModule","imports","CommonModule","exports","declarations"],"mappings":"yfAgBI,SAAAA,EAAmBC,EAAmCC,EAA0BC,GAA7DC,KAAAH,GAAAA,EAAmCG,KAAAF,QAAAA,EAA0BE,KAAAD,GAAAA,SAEhFH,EAAAK,UAAAC,UAAA,WACIF,KAAKG,qBAGTP,EAAAK,UAAAG,gBAAA,WACIJ,KAAKG,oBACLH,KAAKD,GAAGM,iBAIZT,EAAAK,UAAAK,QAAA,SAAQC,GACJP,KAAKG,qBAGTP,EAAAK,UAAAE,kBAAA,WACIH,KAAKQ,OAAUR,KAAKH,GAAGY,cAAcC,OAASV,KAAKH,GAAGY,cAAcC,MAAMC,QACzDX,KAAKF,SAAWE,KAAKF,QAAQc,gCA9BrDC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,eACVC,KAAM,CACFC,sBAAuB,OACvBC,sBAAuB,OACvBC,mBAAoB,uDATDC,EAAAA,kBACnBC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KAeyBC,EAAAA,kBAhB6BC,EAAAA,sDA2BhEC,EAAAA,aAAYZ,KAAA,CAAC,QAAS,CAAC,oBAgB5B,iCALCa,EAAAA,SAAQb,KAAA,CAAC,CACNc,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAClC,GACVmC,aAAc,CAACnC","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional, ChangeDetectorRef, AfterViewInit} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck,AfterViewInit {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, private cd: ChangeDetectorRef) { }\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n\n    ngAfterViewInit() {\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n    \n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }"]}